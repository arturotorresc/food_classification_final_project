# -*- coding: utf-8 -*-
"""proyecto_final_equipo2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_EmRwV9EdPQ-q7OZJcV1WQGyKgWejbm1

# Equipo 2
## Miembros:
### Jorge Arturo Torres Cruz - A01176590
### Juan Manuel Pérez Font - A00819815

## Recolección de datos
"""

# Para uso en colab
from google.colab import drive
drive.mount('/content/drive')

# ==== FOR REFERENCE =====
# ['wines.txt', 'bubble_gums.txt', 'dumplings.txt', 'pizza_urls.txt', 'sandwich.txt']
# =========== ============
url_files = ['wines.txt', 'bubble_gums.txt', 'dumplings.txt', 'pizza_urls.txt', 'sandwich.txt']

# Iteramos por cada uno de los archivos y obtenemos los URLs de las imagenes.
print("Reading files containing images urls")
urls = []
for file_name in url_files:
  with open(file_name) as f:
    content = f.readlines()
    content = [url.strip() for url in content]
    print("Reading {} image urls ({})".format(len(content), file_name))
    urls.append(content)

# Utilizaremos urllib para descargar las imagenes utilizando URLs obtenidos de ImageNet
import urllib.request
import os
from concurrent.futures import ThreadPoolExecutor, as_completed
import uuid
from itertools import repeat

def download_from_url(category_url):
  category, url = category_url
  print(f'Downloading {url} for category {category}')
  try:
    urllib.request.urlretrieve(url, f'./data/{category}/{uuid.uuid4()}.jpg')
    return url
  except Exception as e:
    print('Error')
    return f'Error: {e}'

def download_category_from_url(category, urls):
  try:
    print(f'Creating directory to store {category} images')
    os.mkdir(f'./data/{category}')
  except FileExistsError:
    print(f'./data/{category} directory exists, continuing...')
  except Exception as e:
    print(e)
  else:
    print(f'Succesfully created {category}/ directory')
  results = None
  with ThreadPoolExecutor(max_workers=5) as executor:
    return executor.map(download_from_url, zip(repeat(category), urls), timeout=2)

# ==== FOR REFERENCE =====
# ['wine','bubble_gum', 'dumplings', 'pizza', 'sandwich']
# ========================
categories = ['pizza', 'sandwich'] # wine bubble_gum
try:
  os.mkdir("./data")
except FileExistsError:
  print('data directory exists, continuing...')
for idx, category in enumerate(categories):
  download_category_from_url(category, urls[idx])

"""## Generación de datos"""

